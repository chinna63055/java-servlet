import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.GenericServlet;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebServlet;

/*
 * Here Web xml file can be avoided by user
 * 
 * @WebServlet("/login")
 *  1.It is an annotation.
 *  2.Present in javax.servlet.annotation;(package).
 *  3.This annotation will help to specify url for servlet class.
 *  4.WebServlet can replace the code of web.xml file inn order 
 *    map url with Servlet class.
 */

@WebServlet("/login")
public class validateLoginForm extends GenericServlet {

	@Override
	public void service(ServletRequest req, ServletResponse res) throws ServletException, IOException {
		String email = req.getParameter("email");
		String password = req.getParameter("pwd");
		
		
		
		if(email.equals("Chinnalokeshreddy78@gmail.com") && password.equals("2518")) 
		{
			RequestDispatcher rd = req.getRequestDispatcher("home.jsp");
			rd.forward(req, res);
		}
		else
		{
			PrintWriter pw = res.getWriter();
			String msg = "<html><body><h1>Please Try Again </h1></body></html>";
			pw.write(msg);
			RequestDispatcher rd = req.getRequestDispatcher("login.jsp");
			rd.include(req, res);
		}
		/*
		 * RequestDispatcher 
		 * 
		 * 1.RequestDispatcher is a interface.
		 * Present in javax.servlet(package).
		 * RequestDispatcher will help to transfer control from one dynamic resource to other resource.
		 * 		ex:-
		 * 			RequestDispatcher rd = reg.getRequestDispatcher(" ");
		 * 		Here
		 * 			RequestDispatcher is javax.servlet.
		 * 			rd is reference variable name.
		 * 			req variable of servletRequest method.
		 * 			getRequestDispatcher("") 
		 * 1.we can get RequestDispatcher type object by invoking getRequestDispatcher method of servletRequest
		 * 2.getRequestDispatcher() is parameterized method we have to  pass resource as argument in the form of string.
		 * RequestDispatcher contains 2
		 * 	1.forward
		 * 	2.include
		 * 
		 * Forward method of RequestDispatcher will accept request and response object as argu.
		 * forward method will transfer entire control from one resource to other.
		 * So response generated by only displayed on webBroser
		 * 
		 * 
		 * Include method
		 * 
		 * 1.Include method of RequestDispatcher will help to transfer control from 1 resource to other resource.
		 * 2.When we use include method it will display current page response along with previous page 
		 * 
		 */
		
		/*
		 * 1. PrintWriter is a class.
		 * 2. which  is present in java.io (package).
		 * 3.we can get object of printWriter by invoking getWriter() of 
		 * servletRespose Object.
		 * 			ex:-
		 * 				pw=res.getWriter();
		 * 			Here   res is a reference variable of servletResponce.
		 *
		 * 4.Write is a non-static() present in PrintWriter class
		 * Which will accept string  as arg.
		 * we have to pass html code in the form of string literal as argument 
		 * to write().
		 * 			ex:-
		 * 			String html= "<html><body><h1> code </h1></body></html>"; 
		 * 			pw.write(html);
		 */
	}

}


